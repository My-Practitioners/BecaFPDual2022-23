/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.36).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package org.drdel.beca.prjfinal.micro.clientes.api;

import org.drdel.beca.prjfinal.micro.clientes.model.ArrayGestoraRequest;
import org.drdel.beca.prjfinal.micro.clientes.model.SaveGestoraRequest;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import io.swagger.v3.oas.annotations.responses.ApiResponses;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import javax.validation.Valid;

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.SpringCodegen", date = "2022-12-21T12:19:29.084Z[GMT]")
@Validated
public interface GestorasApi {

    @Operation(summary = "", description = "Permite obtener todas las gestoras", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(responseCode = "200", description = "Solicitud exitosa", content = @Content(mediaType = "application/json", schema = @Schema(implementation = ArrayGestoraRequest.class))),
        
        @ApiResponse(responseCode = "400", description = "Solicitud no encontrada", content = @Content(mediaType = "application/json", schema = @Schema(implementation = String.class))),
        
        @ApiResponse(responseCode = "404", description = "Solicitud no encontrada", content = @Content(mediaType = "application/json", schema = @Schema(implementation = String.class))) })
    @RequestMapping(value = "/gestoras",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<ArrayGestoraRequest> gestorasGet();


    @Operation(summary = "", description = "Permite obtener la gestora seg√∫n su id", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(responseCode = "200", description = "Solicitud exitosa", content = @Content(mediaType = "application/json", schema = @Schema(implementation = SaveGestoraRequest.class))),
        
        @ApiResponse(responseCode = "400", description = "Solicitud no encontrada", content = @Content(mediaType = "application/json", schema = @Schema(implementation = String.class))),
        
        @ApiResponse(responseCode = "404", description = "Solicitud no encontrada", content = @Content(mediaType = "application/json", schema = @Schema(implementation = String.class))) })
    @RequestMapping(value = "/gestoras/{id_gestora}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<SaveGestoraRequest> gestorasIdGestoraGet(@Parameter(in = ParameterIn.PATH, description = "", required=true, schema=@Schema()) @PathVariable("id_gestora") Integer idGestora);


    @Operation(summary = "", description = "Permite crear una nueva gestora en la base de datos", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(responseCode = "201", description = "solicitud exitosa", content = @Content(mediaType = "application/json", schema = @Schema(implementation = String.class))) })
    @RequestMapping(value = "/gestoras",
        consumes = { "application/json" }, 
        method = RequestMethod.POST)
    ResponseEntity<String> gestorasPost(@Parameter(in = ParameterIn.DEFAULT, description = "the data to insert", required=true, schema=@Schema()) @Valid @RequestBody SaveGestoraRequest body);

}

